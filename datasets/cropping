
from PIL import Image
import glob
import cv2
def center_crop(img, dim):
	"""Returns center cropped image
	Args:
	img: image to be center cropped
	dim: dimensions (width, height) to be cropped
	"""
	width, height = img.shape[1], img.shape[0]

	# process crop width and height for max available dimension
	crop_width = dim[0] if dim[0]<img.shape[1] else img.shape[1]
	crop_height = dim[1] if dim[1]<img.shape[0] else img.shape[0] 
	mid_x, mid_y = int(width/2) - 40, int(height/2)
	cw2, ch2 = int(crop_width/2), int(crop_height/2) 
	crop_img = img[mid_y-ch2:mid_y+ch2, mid_x-cw2:mid_x+cw2]
	return crop_img

file_list = glob.glob("/home/uvvuntu/GAN/sparrow_gan/datasets/sparrow/sparrow_db_pixa/*")
out="/home/uvvuntu/GAN/sparrow_gan/datasets/sparrow/sparrow_db_pixa/outputs/"
iter = 93
for type in file_list:
    class_name = type.split("/")[-1]
    if class_name == 'left':
        for img_path in glob.glob(type + "/*.jpg"):
            img = cv2.imread(img_path)
            scale_percent = 80
            width = int(img.shape[1] * scale_percent / 100)
            height = int(img.shape[0] * scale_percent / 100)
            dim = (width, height)
			# resize image
            resized = cv2.resize(img, dim, interpolation = cv2.INTER_AREA)
            img_crp = center_crop(resized,(400,400))
            res=cv2.imwrite(str(iter)+'.jpeg', img_crp)
            
            iter = iter+1
            print(res)
print(iter)